[{"attributes":{"title":"Homepage","date":"2016-12-30T00:00:00.000Z","website":"https://rosshill.ca","repository":"https://github.com/rosslh/rosshill.ca","image":"homepage","blurb":"My website where I show off my personal projects","WIP":true,"tags":["Sapper","JavaScript","Cypress"]},"body":"<p>My personal website, <a href=\"https://rosshill.ca\">rosshill.ca</a>, provides information about me and serves as a showcase of my projects. Originally the website was built in plain-old HTML, JavaScript, and SASS. Eventually though, after having gained experience in React.js, I felt that my webpage could use the functionality a library like React provides. Eventually I settled on using an exciting new framework, <a href=\"http://sapper.svelte.technology\">Sapper</a>. What got me interested in Sapper, was <a href=\"https://svelte.technology/blog/sapper-towards-the-ideal-web-app-framework\">a blog post</a> by the framework&#39;s creator Rich Harris.</p>\n<p>Sapper offers a component based architecture for a web app with baked in PWA support, without having to send a 40kb runtime to the client. As a benchmark of framework sizes, a Medium.com clone was made with React/Redux and Sapper, and the Sapper app&#39;s bundle, which would be sent to the user, was about half of the size. It&#39;s not just about the bundle size though, the project also had half of the lines-of-code as the React project.</p>\n<p>After hearing these benefits, I had to give Sapper a try! I began building my website with a new blog-like project showcase, and I really enjoyed the simplicity of Sapper&#39;s project structure. It all came together quite quickly, and soon I published the static website on Netlify.</p>\n"},{"attributes":{"title":"IsEarthStillWarming.com","date":"2019-01-11T00:00:00.000Z","website":"https://isearthstillwarming.com","repository":"https://github.com/rosslh/isearthstillwarming.com","image":"isearthstillwarming","thumbnail":"fire","blurb":"A website with up-to-date global warming information and data","tags":["React","JavaScript","Data viz","React Static","Cypress"]},"body":"<p>The goal of this webpage is to provide a high-level overview of what global warming is: how it&#39;s caused, how much the Earth has warmed, and its observed and predicted effects. Made with <a href=\"https://github.com/nozzle/react-static\">React Static</a>, a static-site generator for React, IsEarthStillWarming.com fetches up-to-date climate data from NASA and NOAA servers and displays the data as charts to provide a visualization of how global warming is progressing.</p>\n<p>The webpage has a summary of the current state of global warming, with references provided for each piece of information. The website fetches its data and generates the webpages at build time, and on runtime it simply serves the already generated webpages. I chose this approach because retrieving and parsing the climate data takes some time. The servers we fetch data from are fairly slow, and the data comes in as a CSV which needs to be parsed into JSON in order to be used in a JavaScript application.</p>\n"},{"attributes":{"title":"Mandelbrot set explorer","date":"2016-11-29T00:00:00.000Z","repository":"https://github.com/rosslh/Mandelbrot-set-explorer","image":"mandelbrot","thumbnail":"mandelbrot-thumb","blurb":"An interactive application that lets you explore the Mandelbrot set fractal. Made with Python and TKinter.","tags":["Python","TKinter","Pillow","Multiprocessing","Graphics"]},"body":"<p>The Mandelbrot Set is the set of complex numbers that stays bounded when iterated on the function, <code>f(z) = z<sup>2</sup> + c</code>. A famous example of a fractal in mathematics, the Mandelbrot Set has infinite complexity which makes exploring it quite interesting. In Python, using the UI and graphics libraries TKinter and Pillow, I created an interactive Mandelbrot Set visualizer that lets you zoom into parts of the fractal.</p>\n<p>One challenge with the Mandelbrot set is that it is quite computationally intensive to visualize. For each pixel in the visualization, those coordinates need to be iterated on the before-mentioned formula. In order to speed up the visualization, this project uses mutliprocessing to split up the work load across all available CPU cores on the computer. Through this project I gained experience in software graphics and designing user interfaces.</p>\n"},{"attributes":{"title":"QHacks","date":"2018-04-21T00:00:00.000Z","image":"qhacks","thumbnail":"qhacks-crown","website":"https://qhacks.io","repository":"https://github.com/qhacks/qhacks-website","blurb":"In my role on the QHacks executive team, I worked with a two other members of the exec to build the landing page for the hackathon as well as the interface students use to apply.","tags":["React","JavaScript","GraphQL","Gatsby"]},"body":"<p><a href=\"https://qhacks.io\">QHacks</a> is a hackathon hosted at Queenâ€™s University where software developers come together to collaborate on projects and win prizes. As part of the Technology team on the QHacks 2018/2019 Executive, my role was to help build a new website for the event that contains information on sponsors, the event schedule, and how to apply.</p>\n<p>I also build the front-end of our QHacks application dashboard - the webapp interested students used to apply to the event and give us more information about themselves. Over the month leading up the the event, the application system took in applications from over 1200 interested students - about 400 of which were accepted.</p>\n"},{"attributes":{"title":"Unitransform","date":"2018-12-05T00:00:00.000Z","repository":"https://github.com/rosslh/unitransform","image":"unitransform","thumbnail":"rainbow","blurb":"A JavaScript library for visually consistent color transformations through HSLuv color space","tags":["Library","JavaScript","Color"]},"body":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n"},{"attributes":{"title":"WTFormat.com","date":"2018-12-05T00:00:00.000Z","repository":"https://github.com/rosslh/wtformat","website":"https://wtformat.com/","image":"wtformat","thumbnail":"moment","blurb":"An online tool for generating Moment.js date format codes","tags":["Moment","JavaScript"]},"body":"<p><a href=\"https://momentjs.com\">Moment.js</a> is a JavaScript library that can parse, manipulate, and format dates and times. To format a date, you give Moment a time code like <code>YYYY-MM-DD</code>. When I was working front-end at <a href=\"https://www.nudge.ai\">Nudge.ai</a></a>, I found myself having to go to Moment&#39;s documentation to see how to format dates in various ways.</p>\n<p>In order to make the process of date formatting faster, I created <a href=\"https://wtformat.com\">WTFormat.com</a>, which gives you a date which you rewite in your preferred format. The site then generates the Moment format code that would yield that output.</p>\n"}]